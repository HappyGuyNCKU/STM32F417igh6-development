#include "main.h"

int main() {

    initgpio();
    //rotate();

//	GPIO_SetBits(GPIOB, ctrl[0]);

	GPIO_ResetBits(GPIOB, ctrl[0]);
	delay(10000000);
	GPIO_SetBits(GPIOB, ctrl[0]);
	delay(10000000);
	GPIO_ResetBits(GPIOB, ctrl[0]);
	delay(10000000);

	uint32_t count = 0;

	while(1){

		if(count%2 == 1){
			GPIO_SetBits(GPIOB, ctrl[1]);
		}else if(count%2 == 0){
			GPIO_ResetBits(GPIOB, ctrl[1]);
		}

		if(GPIO_ReadInputDataBit(GPIOB, ctrl[3]) == 1){
			GPIO_SetBits(GPIOB, ctrl[0]);
			delay(10000000);
		}else if(GPIO_ReadInputDataBit(GPIOB, ctrl[3]) == 0){
			GPIO_ResetBits(GPIOB, ctrl[0]);
			delay(10000000);
		}
	}

   return 0;

}


void initgpio() {

    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);

    GPIO_InitTypeDef gpio;
    GPIO_StructInit(&gpio);
    gpio.GPIO_Mode = GPIO_Mode_OUT;
    gpio.GPIO_Pin = motor_out;
	gpio.GPIO_Speed = GPIO_Speed_50MHz;
    gpio.GPIO_OType = GPIO_OType_PP;
    GPIO_Init(GPIOB, &gpio);

    gpio.GPIO_Mode = GPIO_Mode_IN;
    gpio.GPIO_Pin = motor_in;
	gpio.GPIO_Speed = GPIO_Speed_50MHz;
    gpio.GPIO_PuPd = GPIO_PuPd_UP;
    GPIO_Init(GPIOB, &gpio);
}

/*0:OPEN, 1:CLOSE, 2:FULL_OPENED, 3:FULL_CLOESD*/

void rotate(){

    int i = 0;
    int h = 0;

    GPIO_ResetBits(GPIOB, ctrl[0]);
    GPIO_SetBits(GPIOB, ctrl[1]);

    while(1){

	
	    GPIO_ResetBits(GPIOB, ctrl[0]);
	    GPIO_SetBits(GPIOB, ctrl[1]);

	    for(i=0;i<10000;i++){
		h++;
	    }
    
	    i = 0;


	    GPIO_ResetBits(GPIOB, ctrl[1]);
	    GPIO_SetBits(GPIOB, ctrl[0]);

	    for(i=0;i<10000;i++){
		h++;         
	    }

	    i = 0;
	
    }

}

void delay(uint32_t time){
	while(time--);
}

void _init(void) {return;}
